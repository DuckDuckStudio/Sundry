name: Test Run

on:
  # 有新提交 push 时，不限哪个分支
  # 但限制要是 src/ 或 installer.iss 或 requirements.txt 这些文件有变更
  push:
    paths:
      - 'src/**'
      - 'installer.iss'
      - 'requirements.txt'
  # 手动触发
  workflow_dispatch:

permissions: {}

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置 Python
        uses: actions/setup-python@v5
        env:
          PYTHONIOENCODING: utf-8
        with:
          python-version: 3.x

      - name: 更新版本号
        env:
          PYTHONIOENCODING: utf-8
        # 前面已经配置过 Python 了，这个脚本只用 os 和 sys 这两个标准库，不用再装依赖
        run: |
          python "自动化脚本/修改版本号.py" "123.456.789"

      - name: 安装依赖
        shell: pwsh
        env:
          PYTHONIOENCODING: utf-8
        # 环境配置的依赖文件中含有打包所需依赖
        run: |
          pip install -r "requirements.txt"
          pip install pyinstaller
          pip list
          Write-Host "=================UPX===================="
          $upx_url = (Invoke-WebRequest -Uri https://api.github.com/repos/upx/upx/releases/latest).Content | ConvertFrom-Json | Select-Object -ExpandProperty assets | Where-Object { $_.name -like "*win64.zip" } | Select-Object -ExpandProperty browser_download_url
          Write-Host "[INFO] Latest UPX download URL: $upx_url"
          Invoke-WebRequest -Uri $upx_url -OutFile "upx-latest.zip"
          7z x "upx-latest.zip" -o"upx"
          $upx_version = (Get-ChildItem -Path "upx" -Directory | Sort-Object Name -Descending | Select-Object -First 1).Name
          Move-Item "upx\$upx_version\*" "upx" -Verbose
          Remove-Item "upx\$upx_version" -Verbose -Recurse
          Remove-Item "upx-latest.zip" -Verbose
          tree /a /f

      - name: 复制许可文件
        shell: pwsh
        run: |
          Copy-Item -Path "LICENSE" -Destination "src/LICENSE" -Verbose

      - name: 整理源码
        # 整理文件 > 压缩文件 > 清理工作目录
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          mkdir Release
          mkdir Release/src
          cp -rv src/ Release
          cp -v LICENSE Release/src
          cp -v requirements.txt Release/src
          # 压缩源码到 Release，7z 和 zip
          7z a -t7z Release/Sundry-src.7z Release/src
          7z a -tzip Release/Sundry-src.zip Release/src

      - name: 构建 Sundry.exe
        shell: bash
        env:
          PYTHONIOENCODING: utf-8
        # 这里是直接打包过去的，不用管 sundry.ps1
        run: |
          mkdir Release/pack
          cp -v src/fun.txt Release/pack
          cp -v LICENSE Release/pack
          echo ========================================
          pyinstaller --onefile --distpath="Release/pack" --name="sundry.exe" "src/sundry.py" --upx-dir="upx"

      - name: Checkout winget-pkgs
        uses: actions/checkout@v4.2.2
        with:
          repository: DuckDuckStudio/winget-pkgs
          path: winget-pkgs

      - name: Checkout winget-tools
        uses: actions/checkout@v4.2.2
        with:
          repository: DuckDuckStudio/winget-tools
          path: winget-tools

      - name: 配置前
        shell: bash
        run: |
          git config --global user.name "Sundry Test Workflow"
          git config --global user.email "SundryTestWorkflow@example.com"
          cd "$GITHUB_WORKSPACE/winget-pkgs"
          git remote add upstream https://github.com/microsoft/winget-pkgs.git
          git fetch upstream
          cd "$GITHUB_WORKSPACE"

      - name: 配置 Sundry
        shell: bash
        run: |
          # 创建用户目录下的 .config/DuckStudio/Sundry/config.json，并写入
          # {
          #     "version": "123.456.789",
          #     "winget-pkgs": "上面克隆的位置",
          #     "winget-tools": "上面克隆的位置",
          #     "pkgs-repo": "DuckDuckStudio/winget-pkgs",
          #     "tools-repo": "DuckDuckStudio/winget-tools",
          #     "signature": "no"
          # }
          mkdir -p "$GITHUB_WORKSPACE/.config/DuckStudio/Sundry"
          echo "{
            \"version\": \"123.456.789\",
            \"winget-pkgs\": \"$GITHUB_WORKSPACE/winget-pkgs\",
            \"winget-tools\": \"$GITHUB_WORKSPACE/winget-tools\",
            \"pkgs-repo\": \"DuckDuckStudio/winget-pkgs\",
            \"tools-repo\": \"DuckDuckStudio/winget-tools\",
            \"signature\": \"no\"
          }" > "$GITHUB_WORKSPACE/.config/DuckStudio/Sundry/config.json"

      - name: 测试 - Sundry 基本命令
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          ./Release/pack/sundry.exe help
          ./Release/pack/sundry.exe ver

      - name: 测试 - logs-analyse
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: ./Release/pack/sundry.exe logs-analyse "https://dev.azure.com/shine-oss/8b78618a-7973-49d8-9174-4360829d979b/_build/results?buildId=137464" n y

      - name: 测试 - cat
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          ./Release/pack/sundry.exe cat DuckStudio.Sundry 1.2.3
          ./Release/pack/sundry.exe cat DuckDuckStudio.Sundry 1.2.3 all
          ./Release/pack/sundry.exe cat DuckDuckStudio.Sundry 1.2.3 i
          ./Release/pack/sundry.exe cat DuckDuckStudio.Sundry 1.2.3 l zh-CN
          ./Release/pack/sundry.exe cat DuckDuckStudio.Sundry 1.2.3 v

      - name: 测试 - sync
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: ./Release/pack/sundry.exe sync

      - name: 测试 - repr
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          ./Release/pack/sundry.exe repr ./Release/pack/fun.txt
          ./Release/pack/sundry.exe repr "每个人一天 18 公斤的凤梨，吃个两个礼拜，很难吗？一颗就 3 公斤，很难吗？一点都不难，我们怕什么？
          不要，不要，同时吃太多凤梨会死的，应付不过来了，求求你慢点，呜哦哦，要头昏眼花了哦齁哦哦哦哦哦哦"

      - name: 测试 - config
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          ./Release/pack/sundry.exe config show
          ./Release/pack/sundry.exe config signature yes
          ./Release/pack/sundry.exe config show
          ./Release/pack/sundry.exe config signature no # 还原

      - name: 测试 - revert
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          cd "$GITHUB_WORKSPACE/winget-pkgs"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          cd "$GITHUB_WORKSPACE"
          ./Release/pack/sundry.exe revert pkgs n y

          cd "$GITHUB_WORKSPACE/winget-tools"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          cd "$GITHUB_WORKSPACE"
          ./Release/pack/sundry.exe revert tools n y

          cd "$GITHUB_WORKSPACE/winget-tools"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          cd "$GITHUB_WORKSPACE/winget-pkgs"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          cd "$GITHUB_WORKSPACE"
          ./Release/pack/sundry.exe revert all n y

          cd "$GITHUB_WORKSPACE/winget-pkgs"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          git add .
          git commit -m "测试提交"
          cd "$GITHUB_WORKSPACE"
          ./Release/pack/sundry.exe revert pkgs y y

          cd "$GITHUB_WORKSPACE/winget-tools"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          git add .
          git commit -m "测试提交"
          cd "$GITHUB_WORKSPACE"
          ./Release/pack/sundry.exe revert tools y y

          cd "$GITHUB_WORKSPACE/winget-tools"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          git add .
          git commit -m "测试提交"
          cd "$GITHUB_WORKSPACE/winget-pkgs"
          git checkout -b Ciallo
          echo "哎呦，刹不住车了嘿！现在人追着车跑嘿！现在人追着车跑！" > "test.txt" # 创建一些测试文件
          git add .
          git commit -m "测试提交"
          cd "$GITHUB_WORKSPACE"
          ./Release/pack/sundry.exe revert all y y

      - name: 测试 - fun
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          ./Release/pack/sundry.exe fun
          ./Release/pack/sundry.exe fun random
          ./Release/pack/sundry.exe fun list
          ./Release/pack/sundry.exe fun add "什么玩意儿"
          ./Release/pack/sundry.exe fun list
          ./Release/pack/sundry.exe fun remove "什么玩意儿"
          ./Release/pack/sundry.exe fun list
          echo "你以为你是谁啊？！" > "test.txt"
          ./Release/pack/sundry.exe fun import "test.txt"
          ./Release/pack/sundry.exe fun list

      - name: 上传构建文件
        uses: actions/upload-artifact@v4
        with:
          name: Release
          path: Release/**
          retention-days: 7
