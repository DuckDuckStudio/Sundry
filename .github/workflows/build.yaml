name: Pack Releases

on:
  workflow_dispatch:
    inputs:
      version:
        description: 版本号 (不带v)
        required: true
        default: 2025.520.1314
        # 神金
  release:
    types: [ published ]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 处理版本号
        shell: pwsh
        run: |
          if ($env:GITHUB_EVENT_NAME -eq "workflow_dispatch") {
            $version = "${{ github.event.inputs.version }}"
            # 如果版本号以 v 开头，则去掉 v
            if ($version.StartsWith("v")) {
              $version = $version.Substring(1)
            }
          } else {
            $version = "${{ github.ref_name }}"
            # 如果版本号以 refs/tags/ 开头，则去掉 refs/tags/
            if ($version.StartsWith("refs/tags/")) {
              $version = $version.Substring(10)
            }
            # 如果版本号以 v 开头，则去掉 v
            if ($version.StartsWith("v")) {
              $version = $version.Substring(1)
            }
          }
          Write-Host "Version: $version"
          # 将版本号写入环境变量
          Write-Output "VERSION=$version" | Out-File $env:GITHUB_ENV -Append

      - name: 检出代码
        uses: actions/checkout@v5

      - name: 配置 Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: 更新版本号
        env:
          PYTHONIOENCODING: utf-8
        # 前面已经配置过 Python 了，这个脚本只用 os 和 sys 这两个标准库，不用再装依赖
        run: |
          python "自动化脚本/修改版本号.py" "${{ env.VERSION }}"

      - name: 安装依赖
        shell: pwsh
        env:
          PYTHONIOENCODING: utf-8
        # 环境配置的依赖文件中含有打包所需依赖
        run: |
          pip install -r "requirements.txt"
          pip list
          Write-Host "=================UPX===================="
          $upx_url = (Invoke-WebRequest -Uri https://api.github.com/repos/upx/upx/releases/latest).Content | ConvertFrom-Json | Select-Object -ExpandProperty assets | Where-Object { $_.name -like "*win64.zip" } | Select-Object -ExpandProperty browser_download_url
          Write-Host "[INFO] Latest UPX download URL: $upx_url"
          Invoke-WebRequest -Uri $upx_url -OutFile "upx-latest.zip"
          7z x "upx-latest.zip" -o"upx"
          $upx_version = (Get-ChildItem -Path "upx" -Directory | Sort-Object Name -Descending | Select-Object -First 1).Name
          Move-Item "upx\$upx_version\*" "upx" -Verbose
          Remove-Item "upx\$upx_version" -Verbose -Recurse
          Remove-Item "upx-latest.zip" -Verbose
          tree /a /f

      - name: 整理源码
        # 整理文件 > 压缩文件 > 清理工作目录
        env:
          PYTHONIOENCODING: utf-8
        shell: bash
        run: |
          cp -v LICENSE src/LICENSE
          mkdir Release
          mkdir Release/src
          cp -rv src/ Release
          cp -v LICENSE Release/src
          cp -v requirements.txt Release/src
          # 压缩源码到 Release，7z 和 zip
          7z a -t7z Release/Sundry-src.7z Release/src
          7z a -tzip Release/Sundry-src.zip Release/src

      - name: 制作安装程序和打包后的压缩包
        shell: bash
        env:
          PYTHONIOENCODING: utf-8
        # 这里是直接打包过去的，不用管 sundry.ps1
        run: |
          mkdir Release/pack
          cp -v src/fun.txt Release/pack
          cp -v LICENSE Release/pack
          echo ========================================
          python "自动化脚本/png-2-ico.py"
          pyinstaller --onefile --distpath="Release/pack" --name="sundry.exe" "src/sundry.py" --upx-dir="upx" -i "icon/Sundry.ico"
          echo ========================================
          7z a -t7z Release/Sundry.7z Release/pack
          7z a -tzip Release/Sundry.zip Release/pack
          echo ========================================
          curl -o "C:\Program Files (x86)\Inno Setup 6\Languages\ChineseSimplified.isl" "https://raw.githubusercontent.com/jrsoftware/issrc/main/Files/Languages/Unofficial/ChineseSimplified.isl"
          iscc installer.iss

      - name: 上传构建文件
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: Release
          path: Release/**

      - name: 整理发行版文件
        if: ${{ github.event_name != 'workflow_dispatch' }}
        shell: bash
        run: |
          rm -rv Release/pack
          rm -rv Release/src

      - name: 发布至发行版
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: |
            Release/**
